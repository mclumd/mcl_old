Instructions for building MCL 2.0
---------------------------------

Required packages:

- g++, standard c/c++ headers, and make
- compile, build, and install UMBC_Utils.
- a compiled version of the SMILE libraries (libsmile and libsmilelearn)
  these libraries should be installed to libs/glue in the build directory
 
Optional packages:

- the "dot" package is required to convert dot output from the ontology
  tools to postscript (on Ubuntu, dot is installed as part of the "graphvis"
  package)


Preparing for the build:

- you should ensure that there are makefiles for your OS and machine in 
  the "make" directory:
  + make.$(MACHINENAME)
  + make.$(OS)
  
  These files should define and/or override all OS or machine-specific
  commands & directories to meet the minimum functionality required in
  the build.
  
- make variables are used to define locations of include and libraries.
  the prefix "build", "sys", and "machine" are used to allow build-wide,
  system (OS) wide, and machine-specific assignments.
  
  
Build Instructions:

- after having specified the location for the install in the local 
  makefile, run "make prepare" in the build directory.
  this will create mcl subdirectories in the local lib and include 
  directories, as well as a config directory under lib/mcl.

- be sure to "make install" umbc_utils and that the install directory
  is specified in one of the LIBDIR variables.
  
- "make install" in the build directory.
  
  this step will first build the MCL library, then copy it to
  $(MACHINE_INSTALLROOT)/lib
  then it will copy the headers in the api/mcl directory to
  $(MACHINE_INSTALLROOT)/include/mcl/
  and copy the "default" configuration and netdefs from the config 
  directory to $(MACHINE_INSTALLROOT)/lib/mcl/config/


Usage:

- link your executables agains MCL2Core  
- be sure to define the environment variable MCL_CONFIG_PATH and
  point it to the directory $(MACHINE_INSTALLROOT)/lib/mcl/config
- create a file in your home directory ".mcl_config" that contains
  any necessary settings. to see a complete list of settings, see
  assets/settings.tet. for an explanation of settings files, see
  the README in the umbc_utils distribution.
  
